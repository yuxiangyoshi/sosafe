/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sosafe.runningpages;

import java.awt.Toolkit;
import java.util.Observable;
import java.util.Observer;
import sosafe.Admin;

/**
 *
 * @author yuxia
 */
public class AlarmView extends javax.swing.JFrame implements Observer{
    Admin admin;
    /**
     * Creates new form AlarmView
     */
    public AlarmView(Admin ad) {
        super("Alarm Monitor");
        initComponents();
        admin = ad;
        admin.getAlarm().addObserver(this);
        fireLabel.setText("No Alarm");
        breakinLabel.setText("No Alarm");
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fireLabel = new javax.swing.JLabel();
        breakinLabel = new javax.swing.JLabel();
        fireOff = new javax.swing.JButton();
        intrusionOff = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        fireLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        fireLabel.setText("No Alarm");

        breakinLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        breakinLabel.setText("No Alarm");

        fireOff.setText("Alarm Off");
        fireOff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fireOffActionPerformed(evt);
            }
        });

        intrusionOff.setText("Alarm Off");
        intrusionOff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intrusionOffActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(breakinLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                    .addComponent(fireLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fireOff, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(intrusionOff, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(fireLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(breakinLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(fireOff, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addComponent(intrusionOff, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(74, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fireOffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fireOffActionPerformed
        admin.getAlarm().turnOffFireAlarm();
    }//GEN-LAST:event_fireOffActionPerformed

    private void intrusionOffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intrusionOffActionPerformed
        admin.getAlarm().turnOffIntrusionAlarm();
    }//GEN-LAST:event_intrusionOffActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlarmView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlarmView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlarmView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlarmView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AlarmView(new Admin(5,5)).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel breakinLabel;
    private javax.swing.JLabel fireLabel;
    private javax.swing.JButton fireOff;
    private javax.swing.JButton intrusionOff;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {
        Alarm alarm = admin.getAlarm();
        if(alarm.getFireStatus()){
            fireLabel.setText("Fire Detected!");
            Toolkit.getDefaultToolkit().beep();
            System.out.println("fire detected");
        } else {
            fireLabel.setText("No Alarm");
            Toolkit.getDefaultToolkit().beep();
        }
        
        if(alarm.getBreakinStatus()){
            breakinLabel.setText("Intrusion Detected!");
            Toolkit.getDefaultToolkit().beep();
        } else {
            breakinLabel.setText("No Alarm");
            Toolkit.getDefaultToolkit().beep();
        }
        
    }
}
